name: Deploy
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - front
  # pull_request:
  #     - front


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Install dependencies
        run: npm install    
      - name: Test
        run: npm test
        env:
          CI: true
      - name: Generate build
        run: npm run build
      # Share artifact inside workflow
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: react-github-actions-build
          path: build

  deploy:
    runs-on: ubuntu-latest
    # When application is successfully tested and build has been generated
    # Then we can start with deployment
    needs: build
    steps:
      # Download previously shared build
      - name: Get artifact
        uses: actions/download-artifact@v1
        with:
          name: web-ar.studio
      
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
        with:
          source: "web-ar.studio"
          target: "/home/ubuntu/www"


      # # Set the credentials from repository settings/secrets
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      # - name: Push to server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SERVER_IP }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     password: ${{ secrets.SERVER_PASSWORD }}
      #     script: cd ${{ secrets.PROJECT_PATH }} && git pull
      # # Copy the files from build folder to the S3 bucket
      # - name: Deploy to S3
      #   run: aws s3 sync . s3://react-github-actions --acl public-read
      #   working-directory: react-github-actions-build
# jobs:
#   deploy:
#     # runs-on: ubuntu-latest
#     runs-on: self-hosted
#     strategy:
#       matrix:
#         node-version: [12.x]
#     steps:
#     - uses: actions/checkout@v1
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - name: Install Packages
#       run: npm install
#     - name: Build page
#       run: npm build
#     - name: Share artifact inside workflow
#       uses: actions/upload-artifact@v1
#       with:
#         name: react-github-actions-build
#         path: build

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "deploy"
#   deploy:
#     name: Deploy
#     runs-on: ubuntu-latest

#     steps:
#     # Спуливаем содержимое
#     - uses: actions/checkout@v2

#     # Устанавливаем
#     - name: Extract branch name
#       shell: bash
#       run: |
#         echo "::set-env name=BRANCH_NAME::${GITHUB_REF##*/}"
#         echo "${{ env.BRANCH_NAME }}"
#     # Собираем контейнер
#     - name: Build and push image
#       uses: docker/build-push-action@v1.1.0
#       with:
#         repository: hw_front_${{ env.BRANCH_NAME }}
#         dockerfile: ./Dockerfile
#         registry: ${{ secrets.DOCKER_REGISTRY }}
#         username: ${{ secrets.DOCKER_LOGIN }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
#         tags: new
#         build_args: BRAHCH_NAME=${{ env.BRANCH_NAME }}

#     # Деплой
#     - name: Deploy prod
#       if: env.BRANCH_NAME == 'master'
#       uses: wei/curl@v1.1.1
#       with:
#         args: -X POST ${{ secrets.DEPLOY_HOST }}/modules/git/public/web-hook.php?uuid=${{ secrets.DEPLOY_FRONT_PROD_TOKEN }}

#     - name: Deploy dev
#       if: env.BRANCH_NAME == 'dev'
#       uses: wei/curl@v1.1.1
#       with:
#         args: -X POST ${{ secrets.DEPLOY_HOST }}/modules/git/public/web-hook.php?uuid=${{ secrets.DEPLOY_FRONT_DEV_TOKEN }}      